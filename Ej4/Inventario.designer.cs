#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ej4
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ExamenMariaCervera")]
	public partial class InventarioDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertInventory(Inventory instance);
    partial void UpdateInventory(Inventory instance);
    partial void DeleteInventory(Inventory instance);
    #endregion
		
		public InventarioDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ExamenMariaCerveraConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public InventarioDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InventarioDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InventarioDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InventarioDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Inventory> Inventory
		{
			get
			{
				return this.GetTable<Inventory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory")]
	public partial class Inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DealName;
		
		private System.Nullable<int> _LocalId;
		
		private string _Titles;
		
		private string _AvailableSince;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealNameChanging(string value);
    partial void OnDealNameChanged();
    partial void OnLocalIdChanging(System.Nullable<int> value);
    partial void OnLocalIdChanged();
    partial void OnTitlesChanging(string value);
    partial void OnTitlesChanged();
    partial void OnAvailableSinceChanging(string value);
    partial void OnAvailableSinceChanged();
    #endregion
		
		public Inventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DealName
		{
			get
			{
				return this._DealName;
			}
			set
			{
				if ((this._DealName != value))
				{
					this.OnDealNameChanging(value);
					this.SendPropertyChanging();
					this._DealName = value;
					this.SendPropertyChanged("DealName");
					this.OnDealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalId", DbType="Int")]
		public System.Nullable<int> LocalId
		{
			get
			{
				return this._LocalId;
			}
			set
			{
				if ((this._LocalId != value))
				{
					this.OnLocalIdChanging(value);
					this.SendPropertyChanging();
					this._LocalId = value;
					this.SendPropertyChanged("LocalId");
					this.OnLocalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titles", DbType="NVarChar(50)")]
		public string Titles
		{
			get
			{
				return this._Titles;
			}
			set
			{
				if ((this._Titles != value))
				{
					this.OnTitlesChanging(value);
					this.SendPropertyChanging();
					this._Titles = value;
					this.SendPropertyChanged("Titles");
					this.OnTitlesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableSince", DbType="NVarChar(50)")]
		public string AvailableSince
		{
			get
			{
				return this._AvailableSince;
			}
			set
			{
				if ((this._AvailableSince != value))
				{
					this.OnAvailableSinceChanging(value);
					this.SendPropertyChanging();
					this._AvailableSince = value;
					this.SendPropertyChanged("AvailableSince");
					this.OnAvailableSinceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
